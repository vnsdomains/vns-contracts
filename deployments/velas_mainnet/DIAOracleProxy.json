{
  "address": "0x986c685187ec8DE519A6fD1Ed9051E013ebA73Ff",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DIAOracle",
          "name": "_usdOracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "DIAOracleChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DIAOracle",
          "name": "_usdOracle",
          "type": "address"
        }
      ],
      "name": "setUsdOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdOracle",
      "outputs": [
        {
          "internalType": "contract DIAOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e4f7a3e6e00372fc19f824e0cab76c3014a29c9903e64bfe62d7f5fee50e2e7",
  "receipt": {
    "to": null,
    "from": "0x29e076001aa3835163CCD8601f05962A1b8ed3DF",
    "contractAddress": "0x986c685187ec8DE519A6fD1Ed9051E013ebA73Ff",
    "transactionIndex": 1,
    "gasUsed": "387504",
    "logsBloom": "0x
    "blockHash": "0x6cc6987a5e66317a8c96b950bb37fd77c7867652674a414a0d1f450acb28f436",
    "transactionHash": "0x2e4f7a3e6e00372fc19f824e0cab76c3014a29c9903e64bfe62d7f5fee50e2e7",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 53477319,
        "transactionHash": "0x2e4f7a3e6e00372fc19f824e0cab76c3014a29c9903e64bfe62d7f5fee50e2e7",
        "address": "0x986c685187ec8DE519A6fD1Ed9051E013ebA73Ff",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000029e076001aa3835163ccd8601f05962a1b8ed3df"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6cc6987a5e66317a8c96b950bb37fd77c7867652674a414a0d1f450acb28f436"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 53477319,
        "transactionHash": "0x2e4f7a3e6e00372fc19f824e0cab76c3014a29c9903e64bfe62d7f5fee50e2e7",
        "address": "0x986c685187ec8DE519A6fD1Ed9051E013ebA73Ff",
        "topics": [
          "0xf9d7d7e751df81e0305e6bfbdf0e790fed585f0bd4cf4bcf16f88ec876d1a816"
        ],
        "data": "0x0000000000000000000000000a7dc648c44e31636252be2267b86e0d9e1f8856",
        "logIndex": 1,
        "blockHash": "0x6cc6987a5e66317a8c96b950bb37fd77c7867652674a414a0d1f450acb28f436"
      }
    ],
    "blockNumber": 53477319,
    "cumulativeGasUsed": "387504",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0A7dC648C44e31636252be2267B86e0d9E1F8856"
  ],
  "solcInputHash": "65924f228e5e0c0bd4ecd1c86a5f3fff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DIAOracle\",\"name\":\"_usdOracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"DIAOracleChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DIAOracle\",\"name\":\"_usdOracle\",\"type\":\"address\"}],\"name\":\"setUsdOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdOracle\",\"outputs\":[{\"internalType\":\"contract DIAOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"latestAnswer()\":{\"details\":\"Get last VLX/USD price from oracle.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setUsdOracle(address)\":{\"details\":\"Sets usd oracle.\",\"params\":{\"_usdOracle\":\"Oracle address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ethregistrar/DIAOracleProxy.sol\":\"DIAOracleProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ethregistrar/DIAOracleProxy.sol\":{\"content\":\"pragma solidity >=0.8.4;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// https://docs.diadata.org/documentation/oracle-documentation/deployed-contracts\\ninterface DIAOracle {\\n  function getValue(string memory key) external view returns (uint128, uint128);\\n}\\n\\n\\n// DIAOracleProxy gets a price VLX in USD from DIAOracleV2.\\ncontract DIAOracleProxy is Ownable {\\n    // Oracle interface\\n    DIAOracle public usdOracle;\\n\\n    event DIAOracleChanged(address oracle);\\n\\n    constructor(DIAOracle _usdOracle) public {\\n        setUsdOracle(_usdOracle);\\n    }\\n\\n    /**\\n     * @dev Get last VLX/USD price from oracle.\\n     */\\n    function latestAnswer() public view returns(int256) {\\n        (uint128 rate, ) =  usdOracle.getValue(\\\"VLX/USD\\\");\\n        uint256 value = uint256(rate);\\n        return int256(value);\\n    }\\n\\n    /**\\n     * @dev Sets usd oracle.\\n     * @param _usdOracle Oracle address.\\n     */\\n    function setUsdOracle(DIAOracle _usdOracle) public onlyOwner {\\n        usdOracle = _usdOracle;\\n        emit DIAOracleChanged(address(_usdOracle));\\n    }\\n}\\n\",\"keccak256\":\"0xdfa323e7e78bbee62945452fbd742146449d79598c00c36e05a967de166d96fb\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106b63803806106b683398101604081905261002f91610153565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61009f6100f3565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527ff9d7d7e751df81e0305e6bfbdf0e790fed585f0bd4cf4bcf16f88ec876d1a8169060200160405180910390a150565b6000546001600160a01b031633146101515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b600060208284031215610164578081fd5b81516001600160a01b038116811461017a578182fd5b9392505050565b610526806101906000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063b740af7911610050578063b740af79146100db578063c8a4271f146100ee578063f2fde38b1461010e57600080fd5b806350d25bcd14610077578063715018a6146100925780638da5cb5b1461009c575b600080fd5b61007f610121565b6040519081526020015b60405180910390f35b61009a61020d565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b61009a6100e9366004610479565b610221565b6001546100b69073ffffffffffffffffffffffffffffffffffffffff1681565b61009a61011c366004610479565b6102a2565b6001546040517f960384a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f564c582f555344000000000000000000000000000000000000000000000000006044820152600091829173ffffffffffffffffffffffffffffffffffffffff9091169063960384a090606401604080518083038186803b1580156101bc57600080fd5b505afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f4919061049c565b506fffffffffffffffffffffffffffffffff1692915050565b61021561035e565b61021f60006103df565b565b61022961035e565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527ff9d7d7e751df81e0305e6bfbdf0e790fed585f0bd4cf4bcf16f88ec876d1a8169060200160405180910390a150565b6102aa61035e565b73ffffffffffffffffffffffffffffffffffffffff8116610352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61035b816103df565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610349565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516fffffffffffffffffffffffffffffffff8116811461047457600080fd5b919050565b60006020828403121561048a578081fd5b8135610495816104ce565b9392505050565b600080604083850312156104ae578081fd5b6104b783610454565b91506104c560208401610454565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461035b57600080fdfea2646970667358221220875ac25328f9ef3d611f4607ccbfe79f65734533b7f0cf893c039ddb8dceaa6164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063b740af7911610050578063b740af79146100db578063c8a4271f146100ee578063f2fde38b1461010e57600080fd5b806350d25bcd14610077578063715018a6146100925780638da5cb5b1461009c575b600080fd5b61007f610121565b6040519081526020015b60405180910390f35b61009a61020d565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b61009a6100e9366004610479565b610221565b6001546100b69073ffffffffffffffffffffffffffffffffffffffff1681565b61009a61011c366004610479565b6102a2565b6001546040517f960384a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f564c582f555344000000000000000000000000000000000000000000000000006044820152600091829173ffffffffffffffffffffffffffffffffffffffff9091169063960384a090606401604080518083038186803b1580156101bc57600080fd5b505afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f4919061049c565b506fffffffffffffffffffffffffffffffff1692915050565b61021561035e565b61021f60006103df565b565b61022961035e565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527ff9d7d7e751df81e0305e6bfbdf0e790fed585f0bd4cf4bcf16f88ec876d1a8169060200160405180910390a150565b6102aa61035e565b73ffffffffffffffffffffffffffffffffffffffff8116610352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61035b816103df565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610349565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516fffffffffffffffffffffffffffffffff8116811461047457600080fd5b919050565b60006020828403121561048a578081fd5b8135610495816104ce565b9392505050565b600080604083850312156104ae578081fd5b6104b783610454565b91506104c560208401610454565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461035b57600080fdfea2646970667358221220875ac25328f9ef3d611f4607ccbfe79f65734533b7f0cf893c039ddb8dceaa6164736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "latestAnswer()": {
        "details": "Get last VLX/USD price from oracle."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setUsdOracle(address)": {
        "details": "Sets usd oracle.",
        "params": {
          "_usdOracle": "Oracle address."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 545,
        "contract": "contracts/ethregistrar/DIAOracleProxy.sol:DIAOracleProxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10433,
        "contract": "contracts/ethregistrar/DIAOracleProxy.sol:DIAOracleProxy",
        "label": "usdOracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(DIAOracle)10428"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(DIAOracle)10428": {
        "encoding": "inplace",
        "label": "contract DIAOracle",
        "numberOfBytes": "20"
      }
    }
  }
}